type = "directrequest"
schemaVersion = 1
name = "storm-evaluation-callback-kaleido"
externalJobID = "b62fbe09-7f5d-4782-aca4-b80f42e03ef7"
maxTaskDuration = "10m0s"
contractAddress = "0xa64bD6faD3b60815576502786858e163C24032d2"
evmChainID = "1014295229"
minContractPaymentLinkJuels = "0"
observationSource = """
    decode_log  [type=ethabidecodelog 
                    abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                    data="$(jobRun.logData)"
                    topics="$(jobRun.logTopics)"]
                    
    decode_cbor [type=cborparse 
                    data="$(decode_log.data)"]

    adapter     [type="bridge" 
                    name="internal-adapter" 
                    timeout="600s" 
                    requestData="{\\"callback\\": {\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration)}, \\"jobType\\": \\"cic\\", \\"data\\":{\\"termsCid\\": $(decode_cbor.termsCid), \\"keysCid\\": $(decode_cbor.keysCid)}}"]

    url   [type=jsonparse 
                    path="result,url"
                    data="$(adapter)"]

    auth   [type=jsonparse 
                    path="result,auth"
                    data="$(adapter)"]

    data   [type=jsonparse 
                    path="result,data"
                    data="$(adapter)"]

    key   [type=jsonparse 
                    path="result,key"
                    data="$(adapter)"]
    
    callback [type="http"
              method=POST
              url="$(url)"
              requestData="{\\"input\\": {\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(data)}, \\"key\\": $(key)}"
              headers="[\\"Content-Type\\",\\"application/json\\",\\"Request-Timeout\\",\\"2m0s\\",\\"accept\\",\\"application/json\\",\\"Authorization\\", $(auth)]"]

    decode_log -> decode_cbor -> adapter
    adapter -> url -> callback
    adapter -> auth -> callback
    adapter -> data -> callback
    adapter -> key -> callback
"""